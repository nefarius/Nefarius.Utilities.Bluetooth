using Nefarius.Utilities.Bluetooth.SDP;

namespace Tests
{
    public class Tests
    {
        [SetUp]
        public void Setup()
        {
        }

        [Test]
        public void Test1()
        {
            var buffer = new byte[]
            {
                0x36, 0x02, 0xBA, 0x09, 0x00, 0x00, 0x0A, 0x00, 0x01, 0x00, 0x01, 0x09, 0x00, 0x01, 0x35, 0x03, 0x19,
                0x11, 0x24, 0x09, 0x00, 0x04, 0x35, 0x0D, 0x35, 0x06, 0x19, 0x01, 0x00, 0x09, 0x00, 0x11, 0x35, 0x03,
                0x19, 0x00, 0x11, 0x09, 0x00, 0x06, 0x35, 0x09, 0x09, 0x65, 0x6E, 0x09, 0x00, 0x6A, 0x09, 0x01, 0x00,
                0x09, 0x00, 0x09, 0x35, 0x08, 0x35, 0x06, 0x19, 0x11, 0x24, 0x09, 0x01, 0x00, 0x09, 0x00, 0x0D, 0x35,
                0x0F, 0x35, 0x0D, 0x35, 0x06, 0x19, 0x01, 0x00, 0x09, 0x00, 0x13, 0x35, 0x03, 0x19, 0x00, 0x11, 0x09,
                0x01, 0x00, 0x25, 0x13, 0x57, 0x69, 0x72, 0x65, 0x6C, 0x65, 0x73, 0x73, 0x20, 0x43, 0x6F, 0x6E, 0x74,
                0x72, 0x6F, 0x6C, 0x6C, 0x65, 0x72, 0x09, 0x01, 0x01, 0x25, 0x0F, 0x47, 0x61, 0x6D, 0x65, 0x20, 0x43,
                0x6F, 0x6E, 0x74, 0x72, 0x6F, 0x6C, 0x6C, 0x65, 0x72, 0x09, 0x01, 0x02, 0x25, 0x1E, 0x53, 0x6F, 0x6E,
                0x79, 0x20, 0x49, 0x6E, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x45, 0x6E, 0x74,
                0x65, 0x72, 0x74, 0x61, 0x69, 0x6E, 0x6D, 0x65, 0x6E, 0x74, 0x09, 0x02, 0x00, 0x09, 0x01, 0x00, 0x09,
                0x02, 0x01, 0x09, 0x01, 0x11, 0x09, 0x02, 0x02, 0x08, 0x08, 0x09, 0x02, 0x03, 0x08, 0x00, 0x09, 0x02,
                0x04, 0x28, 0x00, 0x09, 0x02, 0x05, 0x28, 0x01, 0x09, 0x02, 0x06, 0x36, 0x01, 0xC2, 0x36, 0x01, 0xBF,
                0x08, 0x22, 0x26, 0x01, 0xBA, 0x05, 0x01, 0x09, 0x05, 0xA1, 0x01, 0x85, 0x01, 0x09, 0x30, 0x09, 0x31,
                0x09, 0x32, 0x09, 0x35, 0x15, 0x00, 0x26, 0xFF, 0x00, 0x75, 0x08, 0x95, 0x04, 0x81, 0x02, 0x09, 0x39,
                0x15, 0x00, 0x25, 0x07, 0x75, 0x04, 0x95, 0x01, 0x81, 0x42, 0x05, 0x09, 0x19, 0x01, 0x29, 0x0E, 0x15,
                0x00, 0x25, 0x01, 0x75, 0x01, 0x95, 0x0E, 0x81, 0x02, 0x75, 0x06, 0x95, 0x01, 0x81, 0x01, 0x05, 0x01,
                0x09, 0x33, 0x09, 0x34, 0x15, 0x00, 0x26, 0xFF, 0x00, 0x75, 0x08, 0x95, 0x02, 0x81, 0x02, 0x06, 0x04,
                0xFF, 0x85, 0x02, 0x09, 0x24, 0x95, 0x24, 0xB1, 0x02, 0x85, 0xA3, 0x09, 0x25, 0x95, 0x30, 0xB1, 0x02,
                0x85, 0x05, 0x09, 0x26, 0x95, 0x28, 0xB1, 0x02, 0x85, 0x06, 0x09, 0x27, 0x95, 0x34, 0xB1, 0x02, 0x85,
                0x07, 0x09, 0x28, 0x95, 0x30, 0xB1, 0x02, 0x85, 0x08, 0x09, 0x29, 0x95, 0x2F, 0xB1, 0x02, 0x85, 0x09,
                0x09, 0x2A, 0x95, 0x13, 0xB1, 0x02, 0x06, 0x03, 0xFF, 0x85, 0x03, 0x09, 0x21, 0x95, 0x26, 0xB1, 0x02,
                0x85, 0x04, 0x09, 0x22, 0x95, 0x2E, 0xB1, 0x02, 0x85, 0xF0, 0x09, 0x47, 0x95, 0x3F, 0xB1, 0x02, 0x85,
                0xF1, 0x09, 0x48, 0x95, 0x3F, 0xB1, 0x02, 0x85, 0xF2, 0x09, 0x49, 0x95, 0x0F, 0xB1, 0x02, 0x06, 0x00,
                0xFF, 0x85, 0x11, 0x09, 0x20, 0x15, 0x00, 0x26, 0xFF, 0x00, 0x75, 0x08, 0x95, 0x4D, 0x81, 0x02, 0x09,
                0x21, 0x91, 0x02, 0x85, 0x12, 0x09, 0x22, 0x95, 0x8D, 0x81, 0x02, 0x09, 0x23, 0x91, 0x02, 0x85, 0x13,
                0x09, 0x24, 0x95, 0xCD, 0x81, 0x02, 0x09, 0x25, 0x91, 0x02, 0x85, 0x14, 0x09, 0x26, 0x96, 0x0D, 0x01,
                0x81, 0x02, 0x09, 0x27, 0x91, 0x02, 0x85, 0x15, 0x09, 0x28, 0x96, 0x4D, 0x01, 0x81, 0x02, 0x09, 0x29,
                0x91, 0x02, 0x85, 0x16, 0x09, 0x2A, 0x96, 0x8D, 0x01, 0x81, 0x02, 0x09, 0x2B, 0x91, 0x02, 0x85, 0x17,
                0x09, 0x2C, 0x96, 0xCD, 0x01, 0x81, 0x02, 0x09, 0x2D, 0x91, 0x02, 0x85, 0x18, 0x09, 0x2E, 0x96, 0x0D,
                0x02, 0x81, 0x02, 0x09, 0x2F, 0x91, 0x02, 0x85, 0x19, 0x09, 0x30, 0x96, 0x22, 0x02, 0x81, 0x02, 0x09,
                0x31, 0x91, 0x02, 0x06, 0x80, 0xFF, 0x85, 0x82, 0x09, 0x22, 0x95, 0x3F, 0xB1, 0x02, 0x85, 0x83, 0x09,
                0x23, 0xB1, 0x02, 0x85, 0x84, 0x09, 0x24, 0xB1, 0x02, 0x85, 0x90, 0x09, 0x30, 0xB1, 0x02, 0x85, 0x91,
                0x09, 0x31, 0xB1, 0x02, 0x85, 0x92, 0x09, 0x32, 0xB1, 0x02, 0x85, 0x93, 0x09, 0x33, 0xB1, 0x02, 0x85,
                0x94, 0x09, 0x34, 0xB1, 0x02, 0x85, 0xA0, 0x09, 0x40, 0xB1, 0x02, 0x85, 0xA4, 0x09, 0x44, 0xB1, 0x02,
                0x85, 0xA7, 0x09, 0x45, 0xB1, 0x02, 0x85, 0xA8, 0x09, 0x45, 0xB1, 0x02, 0x85, 0xA9, 0x09, 0x45, 0xB1,
                0x02, 0x85, 0xAA, 0x09, 0x45, 0xB1, 0x02, 0x85, 0xAB, 0x09, 0x45, 0xB1, 0x02, 0x85, 0xAC, 0x09, 0x45,
                0xB1, 0x02, 0x85, 0xAD, 0x09, 0x45, 0xB1, 0x02, 0x85, 0xB3, 0x09, 0x45, 0xB1, 0x02, 0x85, 0xB4, 0x09,
                0x46, 0xB1, 0x02, 0x85, 0xB5, 0x09, 0x47, 0xB1, 0x02, 0x85, 0xD0, 0x09, 0x40, 0xB1, 0x02, 0x85, 0xD4,
                0x09, 0x44, 0xB1, 0x02, 0xC0, 0x09, 0x02, 0x07, 0x35, 0x08, 0x35, 0x06, 0x09, 0x04, 0x09, 0x09, 0x01,
                0x00, 0x09, 0x02, 0x08, 0x28, 0x00, 0x09, 0x02, 0x09, 0x28, 0x01, 0x09, 0x02, 0x0A, 0x28, 0x01, 0x09,
                0x02, 0x0B, 0x09, 0x01, 0x00, 0x09, 0x02, 0x0C, 0x09, 0x1F, 0x40, 0x09, 0x02, 0x0D, 0x28, 0x00, 0x09,
                0x02, 0x0E, 0x28, 0x00
            };

            var altered = new byte[]
            {
                0x36, 0x02, 0xBB, 0x09, 0x00, 0x00, 0x0A, 0x00, 0x01, 0x00, 0x01, 0x09, 0x00, 0x01, 0x35, 0x03, 0x19,
                0x11, 0x24, 0x09, 0x00, 0x04, 0x35, 0x0D, 0x35, 0x06, 0x19, 0x01, 0x00, 0x09, 0x00, 0x11, 0x35, 0x03,
                0x19, 0x00, 0x11, 0x09, 0x00, 0x06, 0x35, 0x09, 0x09, 0x65, 0x6E, 0x09, 0x00, 0x6A, 0x09, 0x01, 0x00,
                0x09, 0x00, 0x09, 0x35, 0x08, 0x35, 0x06, 0x19, 0x11, 0x24, 0x09, 0x01, 0x00, 0x09, 0x00, 0x0D, 0x35,
                0x0F, 0x35, 0x0D, 0x35, 0x06, 0x19, 0x01, 0x00, 0x09, 0x00, 0x13, 0x35, 0x03, 0x19, 0x00, 0x11, 0x09,
                0x01, 0x00, 0x25, 0x13, 0x57, 0x69, 0x72, 0x65, 0x6C, 0x65, 0x73, 0x73, 0x20, 0x43, 0x6F, 0x6E, 0x74,
                0x72, 0x6F, 0x6C, 0x6C, 0x65, 0x72, 0x09, 0x01, 0x01, 0x25, 0x0F, 0x47, 0x61, 0x6D, 0x65, 0x20, 0x43,
                0x6F, 0x6E, 0x74, 0x72, 0x6F, 0x6C, 0x6C, 0x65, 0x72, 0x09, 0x01, 0x02, 0x25, 0x1E, 0x53, 0x6F, 0x6E,
                0x79, 0x20, 0x49, 0x6E, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x20, 0x45, 0x6E, 0x74,
                0x65, 0x72, 0x74, 0x61, 0x69, 0x6E, 0x6D, 0x65, 0x6E, 0x74, 0x09, 0x02, 0x00, 0x09, 0x01, 0x00, 0x09,
                0x02, 0x01, 0x09, 0x01, 0x11, 0x09, 0x02, 0x02, 0x08, 0x08, 0x09, 0x02, 0x03, 0x08, 0x00, 0x09, 0x02,
                0x04, 0x28, 0x00, 0x09, 0x02, 0x05, 0x28, 0x01, 0x09, 0x02, 0x06, 0x36, 0x01, 0xC3, 0x36, 0x01, 0xC0,
                0x08, 0x22, 0x26, 0x01, 0xBB, 0x06, 0x01, 0xFF, 0x09, 0x01, 0xA1, 0x01, 0x85, 0x01, 0x09, 0x30, 0x09,
                0x31, 0x09, 0x32, 0x09, 0x35, 0x15, 0x00, 0x26, 0xFF, 0x00, 0x75, 0x08, 0x95, 0x04, 0x81, 0x02, 0x09,
                0x39, 0x15, 0x00, 0x25, 0x07, 0x75, 0x04, 0x95, 0x01, 0x81, 0x42, 0x05, 0x09, 0x19, 0x01, 0x29, 0x0E,
                0x15, 0x00, 0x25, 0x01, 0x75, 0x01, 0x95, 0x0E, 0x81, 0x02, 0x75, 0x06, 0x95, 0x01, 0x81, 0x01, 0x05,
                0x01, 0x09, 0x33, 0x09, 0x34, 0x15, 0x00, 0x26, 0xFF, 0x00, 0x75, 0x08, 0x95, 0x02, 0x81, 0x02, 0x06,
                0x04, 0xFF, 0x85, 0x02, 0x09, 0x24, 0x95, 0x24, 0xB1, 0x02, 0x85, 0xA3, 0x09, 0x25, 0x95, 0x30, 0xB1,
                0x02, 0x85, 0x05, 0x09, 0x26, 0x95, 0x28, 0xB1, 0x02, 0x85, 0x06, 0x09, 0x27, 0x95, 0x34, 0xB1, 0x02,
                0x85, 0x07, 0x09, 0x28, 0x95, 0x30, 0xB1, 0x02, 0x85, 0x08, 0x09, 0x29, 0x95, 0x2F, 0xB1, 0x02, 0x85,
                0x09, 0x09, 0x2A, 0x95, 0x13, 0xB1, 0x02, 0x06, 0x03, 0xFF, 0x85, 0x03, 0x09, 0x21, 0x95, 0x26, 0xB1,
                0x02, 0x85, 0x04, 0x09, 0x22, 0x95, 0x2E, 0xB1, 0x02, 0x85, 0xF0, 0x09, 0x47, 0x95, 0x3F, 0xB1, 0x02,
                0x85, 0xF1, 0x09, 0x48, 0x95, 0x3F, 0xB1, 0x02, 0x85, 0xF2, 0x09, 0x49, 0x95, 0x0F, 0xB1, 0x02, 0x06,
                0x00, 0xFF, 0x85, 0x11, 0x09, 0x20, 0x15, 0x00, 0x26, 0xFF, 0x00, 0x75, 0x08, 0x95, 0x4D, 0x81, 0x02,
                0x09, 0x21, 0x91, 0x02, 0x85, 0x12, 0x09, 0x22, 0x95, 0x8D, 0x81, 0x02, 0x09, 0x23, 0x91, 0x02, 0x85,
                0x13, 0x09, 0x24, 0x95, 0xCD, 0x81, 0x02, 0x09, 0x25, 0x91, 0x02, 0x85, 0x14, 0x09, 0x26, 0x96, 0x0D,
                0x01, 0x81, 0x02, 0x09, 0x27, 0x91, 0x02, 0x85, 0x15, 0x09, 0x28, 0x96, 0x4D, 0x01, 0x81, 0x02, 0x09,
                0x29, 0x91, 0x02, 0x85, 0x16, 0x09, 0x2A, 0x96, 0x8D, 0x01, 0x81, 0x02, 0x09, 0x2B, 0x91, 0x02, 0x85,
                0x17, 0x09, 0x2C, 0x96, 0xCD, 0x01, 0x81, 0x02, 0x09, 0x2D, 0x91, 0x02, 0x85, 0x18, 0x09, 0x2E, 0x96,
                0x0D, 0x02, 0x81, 0x02, 0x09, 0x2F, 0x91, 0x02, 0x85, 0x19, 0x09, 0x30, 0x96, 0x22, 0x02, 0x81, 0x02,
                0x09, 0x31, 0x91, 0x02, 0x06, 0x80, 0xFF, 0x85, 0x82, 0x09, 0x22, 0x95, 0x3F, 0xB1, 0x02, 0x85, 0x83,
                0x09, 0x23, 0xB1, 0x02, 0x85, 0x84, 0x09, 0x24, 0xB1, 0x02, 0x85, 0x90, 0x09, 0x30, 0xB1, 0x02, 0x85,
                0x91, 0x09, 0x31, 0xB1, 0x02, 0x85, 0x92, 0x09, 0x32, 0xB1, 0x02, 0x85, 0x93, 0x09, 0x33, 0xB1, 0x02,
                0x85, 0x94, 0x09, 0x34, 0xB1, 0x02, 0x85, 0xA0, 0x09, 0x40, 0xB1, 0x02, 0x85, 0xA4, 0x09, 0x44, 0xB1,
                0x02, 0x85, 0xA7, 0x09, 0x45, 0xB1, 0x02, 0x85, 0xA8, 0x09, 0x45, 0xB1, 0x02, 0x85, 0xA9, 0x09, 0x45,
                0xB1, 0x02, 0x85, 0xAA, 0x09, 0x45, 0xB1, 0x02, 0x85, 0xAB, 0x09, 0x45, 0xB1, 0x02, 0x85, 0xAC, 0x09,
                0x45, 0xB1, 0x02, 0x85, 0xAD, 0x09, 0x45, 0xB1, 0x02, 0x85, 0xB3, 0x09, 0x45, 0xB1, 0x02, 0x85, 0xB4,
                0x09, 0x46, 0xB1, 0x02, 0x85, 0xB5, 0x09, 0x47, 0xB1, 0x02, 0x85, 0xD0, 0x09, 0x40, 0xB1, 0x02, 0x85,
                0xD4, 0x09, 0x44, 0xB1, 0x02, 0xC0, 0x09, 0x02, 0x07, 0x35, 0x08, 0x35, 0x06, 0x09, 0x04, 0x09, 0x09,
                0x01, 0x00, 0x09, 0x02, 0x08, 0x28, 0x00, 0x09, 0x02, 0x09, 0x28, 0x01, 0x09, 0x02, 0x0A, 0x28, 0x01,
                0x09, 0x02, 0x0B, 0x09, 0x01, 0x00, 0x09, 0x02, 0x0C, 0x09, 0x1F, 0x40, 0x09, 0x02, 0x0D, 0x28, 0x00,
                0x09, 0x02, 0x0E, 0x28, 0x00
            };

            SdpPatcher.AlterHidDeviceToVenderDefined(buffer, out buffer);

            var hex = string.Join(", ", buffer.Select(b => $"0x{b:X2}"));

            var d = BthPort.Devices.ToList();

            foreach (var device in d)
            {
                if (SdpPatcher.AlterHidDeviceToVenderDefined(device.CachedServices.ToArray(), out var patched))
                {
                    var t = 01;
                }
            }

            Assert.Pass();
        }
    }
}